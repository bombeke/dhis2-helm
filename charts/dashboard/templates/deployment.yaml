{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dashboard.fullname" . }}
  labels:
    {{- include "dashboard.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "dashboard.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "dashboard.fullname" . }}
  template:
    metadata:
      labels:
        {{- include "dashboard.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ include "dashboard.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: DRUPAL_DATABASE_HOST
              value: {{ .Values.drupal.DRUPAL_DATABASE_HOST | quote }}
            - name: DRUPAL_DATABASE_NAME
              value: {{ .Values.drupal.DRUPAL_DATABASE_NAME | quote }}
            - name: DRUPAL_DATABASE_USER
              value: {{ .Values.drupal.DRUPAL_DATABASE_USER | quote }}
            - name: DRUPAL_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drupal-db-secret  # This secret must be created separately
                  key: database-password
          volumeMounts:
            - name: drupal-data
              mountPath: {{ .Values.persistence.mountPath }}
            - name: drupal-data
              mountPath: {{ .Values.persistence.mountPath }}/sites
              subPath: sites
            - name: drupal-data
              mountPath: {{ .Values.persistence.mountPath }}/modules
              subPath: modules
            - name: drupal-data
              mountPath: {{ .Values.persistence.mountPath }}/themes
              subPath: themes
          livenessProbe:
            httpGet:
              path: /user/login
              port: http
          readinessProbe:
            httpGet:
              path: /user/login
              port: http
      volumes:
        {{- if .Values.persistence.enabled }}
        - name: drupal-data
          persistentVolumeClaim:
            claimName: {{ include "dashboard.fullname" . }}-drupal-pvc
        {{- else }}
        - name: drupal-data
          emptyDir: {}
        {{- end }}
{{- end }}